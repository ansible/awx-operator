---
- name: Check for specified admin password configuration
  k8s_info:
    kind: Secret
    namespace: '{{ ansible_operator_meta.namespace }}'
    name: '{{ admin_password_secret }}'
  register: _custom_admin_password
  no_log: "{{ no_log }}"
  when: admin_password_secret | length

- name: Check for default admin password configuration
  k8s_info:
    kind: Secret
    namespace: '{{ ansible_operator_meta.namespace }}'
    name: '{{ ansible_operator_meta.name }}-admin-password'
  register: _default_admin_password
  no_log: "{{ no_log }}"

- name: Set admin password secret
  set_fact:
    _admin_password_secret: '{{ _custom_admin_password["resources"] | default([]) | length | ternary(_custom_admin_password, _default_admin_password) }}'
  no_log: "{{ no_log }}"

- block:
    - name: Create admin password secret
      k8s:
        apply: true
        definition: "{{ lookup('template', 'admin_password_secret.yaml.j2') }}"
      no_log: "{{ no_log }}"

    - name: Read admin password secret
      k8s_info:
        kind: Secret
        namespace: '{{ ansible_operator_meta.namespace }}'
        name: '{{ ansible_operator_meta.name }}-admin-password'
      register: _generated_admin_password
      no_log: "{{ no_log }}"

  when: not _admin_password_secret['resources'] | default([]) | length

- name: Set admin password secret
  set_fact:
    __admin_password_secret: '{{ _generated_admin_password["resources"] | default([]) | length | ternary(_generated_admin_password, _admin_password_secret) }}'
  no_log: "{{ no_log }}"

- name: Store admin password
  set_fact:
    admin_password: "{{ __admin_password_secret['resources'][0]['data']['password'] | b64decode }}"
  no_log: "{{ no_log }}"
