---
- name: Update admin password status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      adminPasswordSecret: "{{ __admin_password_secret['resources'][0]['metadata']['name'] }}"

- name: Update admin user status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      adminUser: "{{ admin_user }}"

- name: Update postgres configuration status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      postgresConfigurationSecret: "{{ pg_config['resources'][0]['metadata']['name'] }}"

- name: Update broadcast websocket status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      broadcastWebsocketSecret: "{{ __broadcast_websocket_secret['resources'][0]['metadata']['name'] }}"

- name: Update secret key status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      secretKeySecret: "{{ secret_key_secret_name }}"

- name: Retrieve instance version
  k8s_exec:
    namespace: "{{ ansible_operator_meta.namespace }}"
    pod: "{{ awx_task_pod_name }}"
    container: "{{ ansible_operator_meta.name }}-task"
    command: >-
      bash -c "awx-manage --version"
  register: instance_version
  changed_when: false

- name: Update version status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      version: "{{ instance_version.stdout | trim }}"

- name: Update image status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      image: "{{ _custom_image | default(lookup('env', 'RELATED_IMAGE_AWX')) | default(_default_image, true) }}"

- block:
    - name: Retrieve route URL
      k8s_info:
        api_version: 'route.openshift.io/v1'
        kind: Route
        namespace: '{{ ansible_operator_meta.namespace }}'
        name: '{{ ansible_operator_meta.name }}'
      register: route_url

    - name: Update URL status
      operator_sdk.util.k8s_status:
        api_version: '{{ api_version }}'
        kind: "{{ kind }}"
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          URL: "https://{{ route_url['resources'][0]['status']['ingress'][0]['host'] }}"

  when: ingress_type | lower == 'route'

- name: Update migratedFromSecret status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      migratedFromSecret: "{{ tower_migrated_from_secret }}"
  when: tower_migrated_from_secret is defined

- name: Update upgradedPostgresVersion status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      upgradedPostgresVersion: "{{ upgraded_postgres_version }}"
  when: upgraded_postgres_version is defined
