---
- name: Get current version
  set_fact:
    tower_image_version: "{{ tower_image.split(':')[1] }}"

- name: Include secret key configuration tasks
  include_tasks: secret_key_configuration.yml

- name: Load LDAP CAcert certificate
  include_tasks: load_ldap_cacert_secret.yml
  when:
    - ldap_cacert_secret != ''

- name: Load Custom Setting Configmap
  include_tasks: tower_custom_settings.yml
  when: tower_custom_settings != ''

- name: Include admin password configuration tasks
  include_tasks: admin_password_configuration.yml

- name: Include broadcast websocket configuration tasks
  include_tasks: broadcast_websocket_configuration.yml

- name: Include database configuration tasks
  include_tasks: database_configuration.yml

- name: Load Route TLS certificate
  include_tasks: load_route_tls_secret.yml
  when:
    - tower_ingress_type | lower == 'route'
    - tower_route_tls_secret != ''

- name: Ensure configured instance resources exist in the cluster.
  k8s:
    apply: yes
    definition: "{{ lookup('template', item) | from_yaml_all | list }}"
  with_items:
    - tower_config.yaml.j2

- name: Apply Resources
  k8s:
    apply: yes
    definition: "{{ lookup('template', item + '.yaml.j2') }}"
  register: tower_deployment_result
  loop:
    - 'tower_app_credentials'
    - 'tower_service_account'
    - 'tower_persistent'
    - 'tower_deployment'
    - 'tower_service'
    - 'tower_ingress'

- name: Get the resource pod information.
  k8s_info:
    kind: Pod
    namespace: '{{ meta.namespace }}'
    label_selectors:
      - "app.kubernetes.io/name={{ meta.name }}"
      - "app.kubernetes.io/managed-by=awx-operator"
      - "app.kubernetes.io/component=awx"
  register: tower_pods
  until: "tower_pods['resources'][0]['status']['phase'] == 'Running'"
  delay: 5
  retries: 60

- name: Set the resource pod name as a variable.
  set_fact:
    tower_pod_name: "{{ tower_pods['resources'][0]['metadata']['name'] }}"

- name: Verify the resource pod name is populated.
  assert:
    that: tower_pod_name != ''
    fail_msg: "Could not find the tower pod's name."

- name: Check for pending migrations
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ tower_pod_name }}"
    container: "{{ meta.name }}-task"
    command: >-
      bash -c "awx-manage showmigrations | grep -v '[X]' | grep '[ ]' | wc -l"
  changed_when: false
  register: database_check

- name: Migrate the database if the K8s resources were updated.  # noqa 305
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ tower_pod_name }}"
    container: "{{ meta.name }}-task"
    command: >-
      bash -c "awx-manage migrate --noinput"
  register: migrate_result
  when:
    - database_check is defined
    - (database_check.stdout|trim) != '0'

- include_tasks: initialize.yml

- name: Update status variables
  include_tasks: update_status.yml
