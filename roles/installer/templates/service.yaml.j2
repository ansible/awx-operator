---
apiVersion: v1
kind: Service
metadata:
  name: '{{ ansible_operator_meta.name }}-service'
  namespace: '{{ ansible_operator_meta.namespace }}'
  labels:
    app.kubernetes.io/name: '{{ ansible_operator_meta.name }}'
    app.kubernetes.io/part-of: '{{ ansible_operator_meta.name }}'
    app.kubernetes.io/managed-by: '{{ deployment_type }}-operator'
    app.kubernetes.io/component: '{{ deployment_type }}'
    app.kubernetes.io/operator-version: '{{ lookup("env", "OPERATOR_VERSION") }}'
    {{ service_labels | indent(width=4) }}
{% if service_annotations %}
  annotations:
    {{ service_annotations | indent(width=4) }}
{% endif %}
spec:
  ports:
{% if service_type | lower == "nodeport" %}
  type: NodePort
    - port: 80
      protocol: TCP
      targetPort: 8052
      name: http
      nodePort: {{ nodeport_port }}
{% elif service_type | lower == 'loadbalancer' %}
  type: LoadBalancer
{% if loadbalancer_protocol | lower == 'https' %}
    - port: {{ loadbalancer_port }}
      name: https
{% else %}
    - port: 80
      name: http
{% endif %}
      protocol: TCP
      targetPort: 8052
{% endif %}
{% elif service_type | lower == 'clusterip' %}
  type: ClusterIP
    - port: 80
      protocol: TCP
      targetPort: 8052
      name: http
{% endif %}
{% if ingress_type | lower == 'route' and route_tls_termination_mechanism | lower == 'passthrough' %}
    - port: 443
      protocol: TCP
      targetPort: 8053
      name: https
{% endif %}
  selector:
    app.kubernetes.io/name: '{{ ansible_operator_meta.name }}'
    app.kubernetes.io/managed-by: '{{ deployment_type }}-operator'
    app.kubernetes.io/component: '{{ deployment_type }}'
