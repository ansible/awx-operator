---
name: Promote AWX Operator image
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Name for the tag of the release.'
        required: true

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Set TAG_NAME for workflow_dispatch event
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV

      - name: Set TAG_NAME for release event
        if: ${{ github.event_name == 'release' }}
        run: |
          echo "TAG_NAME=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          depth: 0


      - name: Log into registry ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d    # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Log into registry quay.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d    # v3.0.0
        with:
          registry: quay.io/ansible/
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}


      - name: Pull Stored Image and Publish to quay.io/${{ github.repository }}:${TAG_NAME}
        run: |
          docker buildx imagetools create \
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${TAG_NAME} \
            --tag quay.io/ansible/${{ github.repository }}:${TAG_NAME}


      - name: Pull Stored Image and Publish to quay.io/${{ github.repository }}:latest
        run: |
          docker buildx imagetools create \
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${TAG_NAME} \
            --tag quay.io/ansible/${{ github.repository }}:latest


      - name: Release Helm chart
        run: |
          ansible-playbook ansible/helm-release.yml -v \
            -e operator_image=quay.io/${{ github.repository }} \
            -e chart_owner=${{ github.repository_owner }} \
            -e tag=${TAG_NAME} \
            -e gh_token=${{ secrets.GITHUB_TOKEN }} \
            -e gh_user=${{ github.actor }} \
            -e repo_type=https
